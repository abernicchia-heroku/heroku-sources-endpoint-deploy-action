name: "Heroku Sources Endpoint deploy Action"
description: Use Heroku Sources Endpoint API to upload the source code and release it to an app
author: A.Bernicchia
inputs:
  heroku-app-name:
    description: "Your Heroku App name"
    required: true
  heroku-api-key:
    description: "Your Heroku API key"
    required: true
  files-glob:
    default: "*"
    description: "The glob pattern for files to include in the deployment"
    required: false

branding:
  icon: "play-circle"
  color: "purple"
runs:
  using: "composite"
  steps:
    - name: Create Source Endpoint
      shell: bash
      run: |
        echo 'Creating a source endpoint...'
        SOURCE_ENDPOINT=$(curl -X POST https://api.heroku.com/sources \
        -H "Content-Type: application/json" \
        -H "Accept: application/vnd.heroku+json; version=3" \
        -H "Authorization: Bearer ${{ inputs.heroku-api-key }}" | \
        jq -r '{get: .source_blob.get_url, put: .source_blob.put_url}') && echo SOURCE_ENDPOINT=$SOURCE_ENDPOINT >> $GITHUB_ENV

    # it assumes that this action is preceeded by the checkout action to access the source code
    - name: Compress Source Code
      shell: bash
      run: |
        tar -czvf source.tar.gz ${{ inputs.files-glob }}

    - name: Upload Source Code
      shell: bash
      run: |
        export URL=$(echo ${{ toJSON(env.SOURCE_ENDPOINT) }} | jq -r '.put')
        curl $URL -X PUT -H 'Content-Type:' --data-binary @source.tar.gz

    - name: Create Build
      shell: bash
      run: |
        echo 'Create Build'
        export SOURCE_GET_URL=$(echo ${{ toJSON(env.SOURCE_ENDPOINT) }} | jq -r '.get')
        export NEW_BUILD_OUTPUT=$(curl -X POST https://api.heroku.com/apps/${{ inputs.heroku-app-name }}/builds \
        -d '{"source_blob":{"url":"'"$SOURCE_GET_URL"'", "version": "'"${GITHUB_SHA::7}"'"}}' \
        -H 'Accept: application/vnd.heroku+json; version=3' \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer ${{ inputs.heroku-api-key }}")

        echo "NEW_BUILD_OUTPUT=$NEW_BUILD_OUTPUT"
        export NEW_BUILD_ID=$(echo $NEW_BUILD_OUTPUT | jq -r '.id')
        export OUTPUT_STREAM_URL=$(echo $NEW_BUILD_OUTPUT | jq -r '.output_stream_url')
        echo "OUTPUT_STREAM_URL=$OUTPUT_STREAM_URL"

        echo "Getting build output..."
        curl --silent $OUTPUT_STREAM_URL
        NEW_BUILD_STATUS=$(curl --silent https://api.heroku.com/apps/${{ inputs.heroku-app-name }}/builds/$NEW_BUILD_ID \
        -H 'Accept: application/vnd.heroku+json; version=3' \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer ${{ inputs.heroku-api-key }}" | \
        jq -r '.status')

        echo "Build status: $NEW_BUILD_STATUS"
        if [ "$NEW_BUILD_STATUS" != "succeeded" ]; then exit 1; fi